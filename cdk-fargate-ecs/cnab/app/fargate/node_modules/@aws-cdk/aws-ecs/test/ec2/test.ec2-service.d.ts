import { Test } from 'nodeunit';
declare const _default: {
    "When creating an ECS Service": {
        "with only required properties set, it correctly sets default properties"(test: Test): void;
        "errors if daemon and desiredCount both specified"(test: Test): void;
        'Output does not contain DesiredCount if daemon mode is set'(test: Test): void;
        "errors if no container definitions"(test: Test): void;
        "sets daemon scheduling strategy"(test: Test): void;
        "with a TaskDefinition with Bridge network mode": {
            "it errors if vpcPlacement is specified"(test: Test): void;
        };
        "with a TaskDefinition with AwsVpc network mode": {
            "it creates a security group for the service"(test: Test): void;
            "it allows vpcPlacement"(test: Test): void;
        };
        "with distinctInstance placement constraint"(test: Test): void;
        "with memberOf placement constraints"(test: Test): void;
        "with placeSpreadAcross placement strategy"(test: Test): void;
        "errors with placeSpreadAcross placement strategy if daemon specified"(test: Test): void;
        "with placeRandomly placement strategy"(test: Test): void;
        "errors with placeRandomly placement strategy if daemon specified"(test: Test): void;
        "with placePackedBy placement strategy"(test: Test): void;
        "errors with placePackedBy placement strategy if daemon specified"(test: Test): void;
    };
    'classic ELB': {
        'can attach to classic ELB'(test: Test): void;
    };
};
export = _default;
