import { Construct } from "../core/construct";
/**
 * Properties for a Dynamic Reference
 */
export interface DynamicReferenceProps {
    /**
     * The service to retrieve the dynamic reference from
     */
    service: DynamicReferenceService;
    /**
     * The reference key of the dynamic reference
     */
    referenceKey: string;
}
/**
 * References a dynamically retrieved value
 *
 * This is a Construct so that subclasses will (eventually) be able to attach
 * metadata to themselves without having to change call signatures.
 *
 * @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html
 */
export declare class DynamicReference extends Construct {
    private readonly _value;
    constructor(parent: Construct, id: string, props: DynamicReferenceProps);
    /**
     * The value of this dynamic reference
     */
    readonly value: string;
    /**
     * Make a dynamic reference Token value
     *
     * This is a value (similar to CDK Tokens) that will be substituted by
     * CloudFormation before executing the changeset.
     */
    protected makeResolveValue(service: DynamicReferenceService, referenceKey: string): string;
}
/**
 * The service to retrieve the dynamic reference from
 */
export declare enum DynamicReferenceService {
    /**
     * Plaintext value stored in AWS Systems Manager Parameter Store
     */
    Ssm = "ssm",
    /**
     * Secure string stored in AWS Systems Manager Parameter Store
     */
    SsmSecure = "ssm-secure",
    /**
     * Secret stored in AWS Secrets Manager
     */
    SecretsManager = "secretsmanager"
}
