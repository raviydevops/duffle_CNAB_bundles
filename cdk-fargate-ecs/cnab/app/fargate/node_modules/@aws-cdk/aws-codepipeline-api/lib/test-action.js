"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const action_1 = require("./action");
/**
 * The low-level test Action.
 *
 * Test Actions are very similar to build Actions -
 * the difference is that test Actions don't have to have an output artifact.
 *
 * You should never need to use this class directly,
 * instead preferring the concrete implementations,
 * like {@link codebuild.PipelineTestAction}.
 */
class TestAction extends action_1.Action {
    constructor(parent, name, props) {
        super(parent, name, Object.assign({ category: action_1.ActionCategory.Test }, props));
        this.addInputArtifact(props.inputArtifact);
        if (props.outputArtifactName) {
            this.outputArtifact = this.addOutputArtifact(props.outputArtifactName);
        }
    }
}
exports.TestAction = TestAction;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC1hY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0ZXN0LWFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHFDQUF1SDtBQW9Edkg7Ozs7Ozs7OztHQVNHO0FBQ0gsTUFBc0IsVUFBVyxTQUFRLGVBQU07SUFHN0MsWUFBWSxNQUFxQixFQUFFLElBQVksRUFBRSxLQUFzQjtRQUNyRSxLQUFLLENBQUMsTUFBTSxFQUFFLElBQUksa0JBQ2hCLFFBQVEsRUFBRSx1QkFBYyxDQUFDLElBQUksSUFDMUIsS0FBSyxFQUNSLENBQUM7UUFFSCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzNDLElBQUksS0FBSyxDQUFDLGtCQUFrQixFQUFFO1lBQzVCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1NBQ3hFO0lBQ0gsQ0FBQztDQUNGO0FBZEQsZ0NBY0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2RrID0gcmVxdWlyZShcIkBhd3MtY2RrL2Nka1wiKTtcbmltcG9ydCB7IEFjdGlvbiwgQWN0aW9uQXJ0aWZhY3RCb3VuZHMsIEFjdGlvbkNhdGVnb3J5LCBDb21tb25BY3Rpb25Db25zdHJ1Y3RQcm9wcywgQ29tbW9uQWN0aW9uUHJvcHMgfSBmcm9tIFwiLi9hY3Rpb25cIjtcbmltcG9ydCB7IEFydGlmYWN0IH0gZnJvbSBcIi4vYXJ0aWZhY3RcIjtcblxuLyoqXG4gKiBDb25zdHJ1Y3Rpb24gcHJvcGVydGllcyBvZiB0aGUgbG93LWxldmVsIHtAbGluayBUZXN0QWN0aW9uIHRlc3QgQWN0aW9ufS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBUZXN0QWN0aW9uUHJvcHMgZXh0ZW5kcyBDb21tb25BY3Rpb25Qcm9wcywgQ29tbW9uQWN0aW9uQ29uc3RydWN0UHJvcHMge1xuICAvKipcbiAgICogVGhlIHNvdXJjZSB0byB1c2UgYXMgaW5wdXQgZm9yIHRoaXMgdGVzdC5cbiAgICpcbiAgICogQGRlZmF1bHQgQ29kZVBpcGVsaW5lIHdpbGwgdXNlIHRoZSBvdXRwdXQgb2YgdGhlIGxhc3QgQWN0aW9uIGZyb20gYSBwcmV2aW91cyBTdGFnZSBhcyBpbnB1dFxuICAgKi9cbiAgaW5wdXRBcnRpZmFjdD86IEFydGlmYWN0O1xuXG4gIC8qKlxuICAgKiBUaGUgb3B0aW9uYWwgbmFtZSBvZiB0aGUgb3V0cHV0IGFydGlmYWN0LlxuICAgKiBJZiB5b3UgcHJvdmlkZSBhIHZhbHVlIGhlcmUsXG4gICAqIHRoZW4gdGhlIGBvdXRwdXRBcnRpZmFjdGAgcHJvcGVydHkgb2YgeW91ciBBY3Rpb24gd2lsbCBiZSBub24tbnVsbC5cbiAgICogSWYgeW91IGRvbid0LCBgb3V0cHV0QXJ0aWZhY3RgIHdpbGwgYmUgYG51bGxgLlxuICAgKlxuICAgKiBAZGVmYXVsdCB0aGUgQWN0aW9uIHdpbGwgbm90IGhhdmUgYW4gb3V0cHV0IGFydGlmYWN0XG4gICAqL1xuICBvdXRwdXRBcnRpZmFjdE5hbWU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBzZXJ2aWNlIHByb3ZpZGVyIHRoYXQgdGhlIGFjdGlvbiBjYWxscy5cbiAgICpcbiAgICogQGV4YW1wbGUgJ0NvZGVCdWlsZCdcbiAgICovXG4gIHByb3ZpZGVyOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSB1cHBlciBhbmQgbG93ZXIgYm91bmRzIG9uIHRoZSBudW1iZXIgb2YgaW5wdXQgYW5kIG91dHB1dCBhcnRpZmFjdHMgZm9yIHRoaXMgQWN0aW9uLlxuICAgKi9cbiAgYXJ0aWZhY3RCb3VuZHM6IEFjdGlvbkFydGlmYWN0Qm91bmRzO1xuXG4gIC8qKlxuICAgKiBUaGUgc291cmNlIGFjdGlvbiBvd25lciAoY291bGQgYmUgJ0FXUycsICdUaGlyZFBhcnR5JyBvciAnQ3VzdG9tJykuXG4gICAqXG4gICAqIEBkZWZhdWx0ICdBV1MnXG4gICAqL1xuICBvd25lcj86IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIGFjdGlvbidzIGNvbmZpZ3VyYXRpb24uIFRoZXNlIGFyZSBrZXktdmFsdWUgcGFpcnMgdGhhdCBzcGVjaWZ5IGlucHV0IHZhbHVlcyBmb3IgYW4gYWN0aW9uLlxuICAgKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBBV1MgQ29kZVBpcGVsaW5lIFVzZXIgR3VpZGUuXG4gICAqXG4gICAqIGh0dHA6Ly9kb2NzLmF3cy5hbWF6b24uY29tL2NvZGVwaXBlbGluZS9sYXRlc3QvdXNlcmd1aWRlL3JlZmVyZW5jZS1waXBlbGluZS1zdHJ1Y3R1cmUuaHRtbCNhY3Rpb24tcmVxdWlyZW1lbnRzXG4gICAqL1xuICBjb25maWd1cmF0aW9uPzogYW55O1xufVxuXG4vKipcbiAqIFRoZSBsb3ctbGV2ZWwgdGVzdCBBY3Rpb24uXG4gKlxuICogVGVzdCBBY3Rpb25zIGFyZSB2ZXJ5IHNpbWlsYXIgdG8gYnVpbGQgQWN0aW9ucyAtXG4gKiB0aGUgZGlmZmVyZW5jZSBpcyB0aGF0IHRlc3QgQWN0aW9ucyBkb24ndCBoYXZlIHRvIGhhdmUgYW4gb3V0cHV0IGFydGlmYWN0LlxuICpcbiAqIFlvdSBzaG91bGQgbmV2ZXIgbmVlZCB0byB1c2UgdGhpcyBjbGFzcyBkaXJlY3RseSxcbiAqIGluc3RlYWQgcHJlZmVycmluZyB0aGUgY29uY3JldGUgaW1wbGVtZW50YXRpb25zLFxuICogbGlrZSB7QGxpbmsgY29kZWJ1aWxkLlBpcGVsaW5lVGVzdEFjdGlvbn0uXG4gKi9cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBUZXN0QWN0aW9uIGV4dGVuZHMgQWN0aW9uIHtcbiAgcHVibGljIHJlYWRvbmx5IG91dHB1dEFydGlmYWN0PzogQXJ0aWZhY3Q7XG5cbiAgY29uc3RydWN0b3IocGFyZW50OiBjZGsuQ29uc3RydWN0LCBuYW1lOiBzdHJpbmcsIHByb3BzOiBUZXN0QWN0aW9uUHJvcHMpIHtcbiAgICBzdXBlcihwYXJlbnQsIG5hbWUsIHtcbiAgICAgIGNhdGVnb3J5OiBBY3Rpb25DYXRlZ29yeS5UZXN0LFxuICAgICAgLi4ucHJvcHMsXG4gICAgfSk7XG5cbiAgICB0aGlzLmFkZElucHV0QXJ0aWZhY3QocHJvcHMuaW5wdXRBcnRpZmFjdCk7XG4gICAgaWYgKHByb3BzLm91dHB1dEFydGlmYWN0TmFtZSkge1xuICAgICAgdGhpcy5vdXRwdXRBcnRpZmFjdCA9IHRoaXMuYWRkT3V0cHV0QXJ0aWZhY3QocHJvcHMub3V0cHV0QXJ0aWZhY3ROYW1lKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==