import { Test } from 'nodeunit';
declare const _default: {
    "When creating a VPC": {
        "with the default CIDR range": {
            "vpc.vpcId returns a token to the VPC ID"(test: Test): void;
            "it uses the correct network range"(test: Test): void;
            'the Name tag is defaulted to path'(test: Test): void;
        };
        "with all of the properties set, it successfully sets the correct VPC properties"(test: Test): void;
        "contains the correct number of subnets"(test: Test): void;
        "with only isolated subnets, the VPC should not contain an IGW or NAT Gateways"(test: Test): void;
        "with no private subnets, the VPC should have an IGW but no NAT Gateways"(test: Test): void;
        "with no subnets defined, the VPC should have an IGW, and a NAT Gateway per AZ"(test: Test): void;
        "with custom subents, the VPC should have the right number of subnets, an IGW, and a NAT Gateway per AZ"(test: Test): void;
        "with custom subents and natGateways = 2 there should be only two NATGW"(test: Test): void;
        "with enableDnsHostnames enabled but enableDnsSupport disabled, should throw an Error"(test: Test): void;
        "with public subnets MapPublicIpOnLaunch is true"(test: Test): void;
        "with maxAZs set to 2"(test: Test): void;
        "with natGateway set to 1"(test: Test): void;
        'with natGateway subnets defined'(test: Test): void;
        'with mis-matched nat and subnet configs it throws'(test: Test): void;
    };
    "When creating a VPC with a custom CIDR range": {
        "vpc.vpcCidrBlock is the correct network range"(test: Test): void;
    };
    'When tagging': {
        'VPC propagated tags will be on subnet, IGW, routetables, NATGW'(test: Test): void;
        'Subnet Name will propagate to route tables and NATGW'(test: Test): void;
        'Tags can be added after the Vpc is created with `vpc.tags.setTag(...)`'(test: Test): void;
    };
    'can select public subnets'(test: Test): void;
    'can select isolated subnets'(test: Test): void;
    'can select subnets by name'(test: Test): void;
    'export/import': {
        'simple VPC'(test: Test): void;
        'multiple subnets of the same type'(test: Test): void;
        'can select isolated subnets by type'(test: Test): void;
        'can select isolated subnets by name'(test: Test): void;
    };
};
export = _default;
