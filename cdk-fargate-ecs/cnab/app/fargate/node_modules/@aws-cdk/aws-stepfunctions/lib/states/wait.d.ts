import cdk = require('@aws-cdk/cdk');
import { Chain } from '../chain';
import { IChainable, INextable } from '../types';
import { State } from './state';
/**
 * Properties for defining a Wait state
 */
export interface WaitProps {
    /**
     * An optional description for this state
     *
     * @default No comment
     */
    comment?: string;
    /**
     * Wait a fixed number of seconds
     *
     * Exactly one of seconds, secondsPath, timestamp, timestampPath must be supplied.
     */
    seconds?: number;
    /**
     * Wait until the given ISO8601 timestamp
     *
     * Exactly one of seconds, secondsPath, timestamp, timestampPath must be supplied.
     *
     * @example 2016-03-14T01:59:00Z
     */
    timestamp?: string;
    /**
     * Wait for a number of seconds stored in the state object.
     *
     * Exactly one of seconds, secondsPath, timestamp, timestampPath must be supplied.
     *
     * @example $.waitSeconds
     */
    secondsPath?: string;
    /**
     * Wait until a timestamp found in the state object.
     *
     * Exactly one of seconds, secondsPath, timestamp, timestampPath must be supplied.
     *
     * @example $.waitTimestamp
     */
    timestampPath?: string;
}
/**
 * Define a Wait state in the state machine
 *
 * A Wait state can be used to delay execution of the state machine for a while.
 */
export declare class Wait extends State implements INextable {
    readonly endStates: INextable[];
    private readonly seconds?;
    private readonly timestamp?;
    private readonly secondsPath?;
    private readonly timestampPath?;
    constructor(parent: cdk.Construct, id: string, props: WaitProps);
    /**
     * Continue normal execution with the given state
     */
    next(next: IChainable): Chain;
    /**
     * Return the Amazon States Language object for this state
     */
    toStateJson(): object;
}
