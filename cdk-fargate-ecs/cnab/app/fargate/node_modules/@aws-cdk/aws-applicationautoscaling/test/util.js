"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const scalingcommon = require("@aws-cdk/aws-autoscaling-common");
const fc = require("fast-check");
const appscaling = require("../lib");
const lib_1 = require("../lib");
function createScalableTarget(parent) {
    return new appscaling.ScalableTarget(parent, 'Target', {
        serviceNamespace: lib_1.ServiceNamespace.DynamoDb,
        scalableDimension: 'test:TestCount',
        resourceId: 'test:this/test',
        minCapacity: 1,
        maxCapacity: 20,
    });
}
exports.createScalableTarget = createScalableTarget;
class ArbitraryInputIntervals extends fc.Arbitrary {
    generate(mrng) {
        const ret = scalingcommon.generateArbitraryIntervals(mrng);
        return new fc.Shrinkable(ret.intervals);
    }
}
exports.ArbitraryInputIntervals = ArbitraryInputIntervals;
function arbitrary_input_intervals() {
    return new ArbitraryInputIntervals();
}
exports.arbitrary_input_intervals = arbitrary_input_intervals;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInV0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpRUFBa0U7QUFFbEUsaUNBQWtDO0FBQ2xDLHFDQUFzQztBQUN0QyxnQ0FBMEM7QUFFMUMsU0FBZ0Isb0JBQW9CLENBQUMsTUFBcUI7SUFDeEQsT0FBTyxJQUFJLFVBQVUsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRTtRQUNyRCxnQkFBZ0IsRUFBRSxzQkFBZ0IsQ0FBQyxRQUFRO1FBQzNDLGlCQUFpQixFQUFFLGdCQUFnQjtRQUNuQyxVQUFVLEVBQUUsZ0JBQWdCO1FBQzVCLFdBQVcsRUFBRSxDQUFDO1FBQ2QsV0FBVyxFQUFFLEVBQUU7S0FDaEIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQVJELG9EQVFDO0FBRUQsTUFBYSx1QkFBd0IsU0FBUSxFQUFFLENBQUMsU0FBdUM7SUFDOUUsUUFBUSxDQUFDLElBQWU7UUFDN0IsTUFBTSxHQUFHLEdBQUcsYUFBYSxDQUFDLDBCQUEwQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNELE9BQU8sSUFBSSxFQUFFLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMxQyxDQUFDO0NBQ0Y7QUFMRCwwREFLQztBQUVELFNBQWdCLHlCQUF5QjtJQUN2QyxPQUFPLElBQUksdUJBQXVCLEVBQUUsQ0FBQztBQUN2QyxDQUFDO0FBRkQsOERBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2NhbGluZ2NvbW1vbiA9IHJlcXVpcmUoJ0Bhd3MtY2RrL2F3cy1hdXRvc2NhbGluZy1jb21tb24nKTtcbmltcG9ydCBjZGsgPSByZXF1aXJlKCdAYXdzLWNkay9jZGsnKTtcbmltcG9ydCBmYyA9IHJlcXVpcmUoJ2Zhc3QtY2hlY2snKTtcbmltcG9ydCBhcHBzY2FsaW5nID0gcmVxdWlyZSgnLi4vbGliJyk7XG5pbXBvcnQgeyBTZXJ2aWNlTmFtZXNwYWNlIH0gZnJvbSAnLi4vbGliJztcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNjYWxhYmxlVGFyZ2V0KHBhcmVudDogY2RrLkNvbnN0cnVjdCkge1xuICByZXR1cm4gbmV3IGFwcHNjYWxpbmcuU2NhbGFibGVUYXJnZXQocGFyZW50LCAnVGFyZ2V0Jywge1xuICAgIHNlcnZpY2VOYW1lc3BhY2U6IFNlcnZpY2VOYW1lc3BhY2UuRHluYW1vRGIsXG4gICAgc2NhbGFibGVEaW1lbnNpb246ICd0ZXN0OlRlc3RDb3VudCcsXG4gICAgcmVzb3VyY2VJZDogJ3Rlc3Q6dGhpcy90ZXN0JyxcbiAgICBtaW5DYXBhY2l0eTogMSxcbiAgICBtYXhDYXBhY2l0eTogMjAsXG4gIH0pO1xufVxuXG5leHBvcnQgY2xhc3MgQXJiaXRyYXJ5SW5wdXRJbnRlcnZhbHMgZXh0ZW5kcyBmYy5BcmJpdHJhcnk8YXBwc2NhbGluZy5TY2FsaW5nSW50ZXJ2YWxbXT4ge1xuICBwdWJsaWMgZ2VuZXJhdGUobXJuZzogZmMuUmFuZG9tKTogZmMuU2hyaW5rYWJsZTxhcHBzY2FsaW5nLlNjYWxpbmdJbnRlcnZhbFtdPiB7XG4gICAgY29uc3QgcmV0ID0gc2NhbGluZ2NvbW1vbi5nZW5lcmF0ZUFyYml0cmFyeUludGVydmFscyhtcm5nKTtcbiAgICByZXR1cm4gbmV3IGZjLlNocmlua2FibGUocmV0LmludGVydmFscyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFyYml0cmFyeV9pbnB1dF9pbnRlcnZhbHMoKSB7XG4gIHJldHVybiBuZXcgQXJiaXRyYXJ5SW5wdXRJbnRlcnZhbHMoKTtcbn1cbiJdfQ==