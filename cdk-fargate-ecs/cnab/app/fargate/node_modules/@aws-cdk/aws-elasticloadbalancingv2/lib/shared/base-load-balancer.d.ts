import ec2 = require('@aws-cdk/aws-ec2');
import route53 = require('@aws-cdk/aws-route53');
import cdk = require('@aws-cdk/cdk');
/**
 * Shared properties of both Application and Network Load Balancers
 */
export interface BaseLoadBalancerProps {
    /**
     * Name of the load balancer
     *
     * @default Automatically generated name
     */
    loadBalancerName?: string;
    /**
     * The VPC network to place the load balancer in
     */
    vpc: ec2.VpcNetworkRef;
    /**
     * Whether the load balancer has an internet-routable address
     *
     * @default false
     */
    internetFacing?: boolean;
    /**
     * Where in the VPC to place the load balancer
     *
     * @default Public subnets if internetFacing, otherwise private subnets
     */
    vpcPlacement?: ec2.VpcPlacementStrategy;
    /**
     * Indicates whether deletion protection is enabled.
     *
     * @default false
     */
    deletionProtection?: boolean;
}
/**
 * Base class for both Application and Network Load Balancers
 */
export declare abstract class BaseLoadBalancer extends cdk.Construct implements route53.IAliasRecordTarget {
    /**
     * The canonical hosted zone ID of this load balancer
     *
     * @example  Z2P70J7EXAMPLE
     */
    readonly canonicalHostedZoneId: string;
    /**
     * The DNS name of this load balancer
     *
     * @example my-load-balancer-424835706.us-west-2.elb.amazonaws.com
     */
    readonly dnsName: string;
    /**
     * The full name of this load balancer
     *
     * @example app/my-load-balancer/50dc6c495c0c9188
     */
    readonly fullName: string;
    /**
     * The name of this load balancer
     *
     * @example my-load-balancer
     */
    readonly loadBalancerName: string;
    /**
     * The ARN of this load balancer
     *
     * @example arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-internal-load-balancer/50dc6c495c0c9188
     */
    readonly loadBalancerArn: string;
    /**
     * The VPC this load balancer has been created in, if available
     *
     * If the Load Balancer was imported, the VPC is not available.
     */
    readonly vpc?: ec2.VpcNetworkRef;
    /**
     * Attributes set on this load balancer
     */
    private readonly attributes;
    constructor(parent: cdk.Construct, id: string, baseProps: BaseLoadBalancerProps, additionalProps: any);
    /**
     * Set a non-standard attribute on the load balancer
     *
     * @see https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#load-balancer-attributes
     */
    setAttribute(key: string, value: string | undefined): void;
    /**
     * Remove an attribute from the load balancer
     */
    removeAttribute(key: string): void;
    asAliasRecordTarget(): route53.AliasRecordTargetProps;
}
