"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * What kind of addresses to allocate to the load balancer
 */
var IpAddressType;
(function (IpAddressType) {
    /**
     * Allocate IPv4 addresses
     */
    IpAddressType["Ipv4"] = "ipv4";
    /**
     * Allocate both IPv4 and IPv6 addresses
     */
    IpAddressType["DualStack"] = "dualstack";
})(IpAddressType = exports.IpAddressType || (exports.IpAddressType = {}));
/**
 * Backend protocol for health checks
 */
var Protocol;
(function (Protocol) {
    /**
     * HTTP
     */
    Protocol["Http"] = "HTTP";
    /**
     * HTTPS
     */
    Protocol["Https"] = "HTTPS";
    /**
     * TCP
     */
    Protocol["Tcp"] = "TCP";
})(Protocol = exports.Protocol || (exports.Protocol = {}));
/**
 * Load balancing protocol for application load balancers
 */
var ApplicationProtocol;
(function (ApplicationProtocol) {
    /**
     * HTTP
     */
    ApplicationProtocol["Http"] = "HTTP";
    /**
     * HTTPS
     */
    ApplicationProtocol["Https"] = "HTTPS";
})(ApplicationProtocol = exports.ApplicationProtocol || (exports.ApplicationProtocol = {}));
/**
 * Elastic Load Balancing provides the following security policies for Application Load Balancers
 *
 * We recommend the Recommended policy for general use. You can
 * use the ForwardSecrecy policy if you require Forward Secrecy
 * (FS).
 *
 * You can use one of the TLS policies to meet compliance and security
 * standards that require disabling certain TLS protocol versions, or to
 * support legacy clients that require deprecated ciphers.
 *
 * @see https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html
 */
var SslPolicy;
(function (SslPolicy) {
    /**
     * The recommended security policy
     */
    SslPolicy["Recommended"] = "ELBSecurityPolicy-2016-08";
    /**
     * Forward secrecy ciphers only
     */
    SslPolicy["ForwardSecrecy"] = "ELBSecurityPolicy-FS-2018-06";
    /**
     * TLS1.2 only and no SHA ciphers
     */
    SslPolicy["TLS12"] = "ELBSecurityPolicy-TLS-1-2-2017-01";
    /**
     * TLS1.2 only with all ciphers
     */
    SslPolicy["TLS12Ext"] = "ELBSecurityPolicy-TLS-1-2-Ext-2018-06";
    /**
     * TLS1.1 and higher with all ciphers
     */
    SslPolicy["TLS11"] = "ELBSecurityPolicy-TLS-1-1-2017-01";
    /**
     * Support for DES-CBC3-SHA
     *
     * Do not use this security policy unless you must support a legacy client
     * that requires the DES-CBC3-SHA cipher, which is a weak cipher.
     */
    SslPolicy["Legacy"] = "ELBSecurityPolicy-TLS-1-0-2015-04";
})(SslPolicy = exports.SslPolicy || (exports.SslPolicy = {}));
/**
 * How to interpret the load balancing target identifiers
 */
var TargetType;
(function (TargetType) {
    /**
     * Targets identified by instance ID
     */
    TargetType["Instance"] = "instance";
    /**
     * Targets identified by IP address
     */
    TargetType["Ip"] = "ip";
})(TargetType = exports.TargetType || (exports.TargetType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJlbnVtcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOztHQUVHO0FBQ0gsSUFBWSxhQVVYO0FBVkQsV0FBWSxhQUFhO0lBQ3ZCOztPQUVHO0lBQ0gsOEJBQWEsQ0FBQTtJQUViOztPQUVHO0lBQ0gsd0NBQXVCLENBQUE7QUFDekIsQ0FBQyxFQVZXLGFBQWEsR0FBYixxQkFBYSxLQUFiLHFCQUFhLFFBVXhCO0FBRUQ7O0dBRUc7QUFDSCxJQUFZLFFBZVg7QUFmRCxXQUFZLFFBQVE7SUFDbEI7O09BRUc7SUFDSCx5QkFBYSxDQUFBO0lBRWI7O09BRUc7SUFDSCwyQkFBZSxDQUFBO0lBRWY7O09BRUc7SUFDSCx1QkFBVyxDQUFBO0FBQ2IsQ0FBQyxFQWZXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBZW5CO0FBRUQ7O0dBRUc7QUFDSCxJQUFZLG1CQVVYO0FBVkQsV0FBWSxtQkFBbUI7SUFDN0I7O09BRUc7SUFDSCxvQ0FBYSxDQUFBO0lBRWI7O09BRUc7SUFDSCxzQ0FBZSxDQUFBO0FBQ2pCLENBQUMsRUFWVyxtQkFBbUIsR0FBbkIsMkJBQW1CLEtBQW5CLDJCQUFtQixRQVU5QjtBQUVEOzs7Ozs7Ozs7Ozs7R0FZRztBQUNILElBQVksU0FpQ1g7QUFqQ0QsV0FBWSxTQUFTO0lBQ25COztPQUVHO0lBQ0gsc0RBQXlDLENBQUE7SUFFekM7O09BRUc7SUFDSCw0REFBK0MsQ0FBQTtJQUUvQzs7T0FFRztJQUNILHdEQUEyQyxDQUFBO0lBRTNDOztPQUVHO0lBQ0gsK0RBQWtELENBQUE7SUFFbEQ7O09BRUc7SUFDSCx3REFBMkMsQ0FBQTtJQUUzQzs7Ozs7T0FLRztJQUNILHlEQUE0QyxDQUFBO0FBQzlDLENBQUMsRUFqQ1csU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFpQ3BCO0FBRUQ7O0dBRUc7QUFDSCxJQUFZLFVBVVg7QUFWRCxXQUFZLFVBQVU7SUFDcEI7O09BRUc7SUFDSCxtQ0FBcUIsQ0FBQTtJQUVyQjs7T0FFRztJQUNILHVCQUFTLENBQUE7QUFDWCxDQUFDLEVBVlcsVUFBVSxHQUFWLGtCQUFVLEtBQVYsa0JBQVUsUUFVckIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFdoYXQga2luZCBvZiBhZGRyZXNzZXMgdG8gYWxsb2NhdGUgdG8gdGhlIGxvYWQgYmFsYW5jZXJcbiAqL1xuZXhwb3J0IGVudW0gSXBBZGRyZXNzVHlwZSB7XG4gIC8qKlxuICAgKiBBbGxvY2F0ZSBJUHY0IGFkZHJlc3Nlc1xuICAgKi9cbiAgSXB2NCA9ICdpcHY0JyxcblxuICAvKipcbiAgICogQWxsb2NhdGUgYm90aCBJUHY0IGFuZCBJUHY2IGFkZHJlc3Nlc1xuICAgKi9cbiAgRHVhbFN0YWNrID0gJ2R1YWxzdGFjaycsXG59XG5cbi8qKlxuICogQmFja2VuZCBwcm90b2NvbCBmb3IgaGVhbHRoIGNoZWNrc1xuICovXG5leHBvcnQgZW51bSBQcm90b2NvbCB7XG4gIC8qKlxuICAgKiBIVFRQXG4gICAqL1xuICBIdHRwID0gJ0hUVFAnLFxuXG4gIC8qKlxuICAgKiBIVFRQU1xuICAgKi9cbiAgSHR0cHMgPSAnSFRUUFMnLFxuXG4gIC8qKlxuICAgKiBUQ1BcbiAgICovXG4gIFRjcCA9ICdUQ1AnXG59XG5cbi8qKlxuICogTG9hZCBiYWxhbmNpbmcgcHJvdG9jb2wgZm9yIGFwcGxpY2F0aW9uIGxvYWQgYmFsYW5jZXJzXG4gKi9cbmV4cG9ydCBlbnVtIEFwcGxpY2F0aW9uUHJvdG9jb2wge1xuICAvKipcbiAgICogSFRUUFxuICAgKi9cbiAgSHR0cCA9ICdIVFRQJyxcblxuICAvKipcbiAgICogSFRUUFNcbiAgICovXG4gIEh0dHBzID0gJ0hUVFBTJ1xufVxuXG4vKipcbiAqIEVsYXN0aWMgTG9hZCBCYWxhbmNpbmcgcHJvdmlkZXMgdGhlIGZvbGxvd2luZyBzZWN1cml0eSBwb2xpY2llcyBmb3IgQXBwbGljYXRpb24gTG9hZCBCYWxhbmNlcnNcbiAqXG4gKiBXZSByZWNvbW1lbmQgdGhlIFJlY29tbWVuZGVkIHBvbGljeSBmb3IgZ2VuZXJhbCB1c2UuIFlvdSBjYW5cbiAqIHVzZSB0aGUgRm9yd2FyZFNlY3JlY3kgcG9saWN5IGlmIHlvdSByZXF1aXJlIEZvcndhcmQgU2VjcmVjeVxuICogKEZTKS5cbiAqXG4gKiBZb3UgY2FuIHVzZSBvbmUgb2YgdGhlIFRMUyBwb2xpY2llcyB0byBtZWV0IGNvbXBsaWFuY2UgYW5kIHNlY3VyaXR5XG4gKiBzdGFuZGFyZHMgdGhhdCByZXF1aXJlIGRpc2FibGluZyBjZXJ0YWluIFRMUyBwcm90b2NvbCB2ZXJzaW9ucywgb3IgdG9cbiAqIHN1cHBvcnQgbGVnYWN5IGNsaWVudHMgdGhhdCByZXF1aXJlIGRlcHJlY2F0ZWQgY2lwaGVycy5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9lbGFzdGljbG9hZGJhbGFuY2luZy9sYXRlc3QvYXBwbGljYXRpb24vY3JlYXRlLWh0dHBzLWxpc3RlbmVyLmh0bWxcbiAqL1xuZXhwb3J0IGVudW0gU3NsUG9saWN5IHtcbiAgLyoqXG4gICAqIFRoZSByZWNvbW1lbmRlZCBzZWN1cml0eSBwb2xpY3lcbiAgICovXG4gIFJlY29tbWVuZGVkID0gJ0VMQlNlY3VyaXR5UG9saWN5LTIwMTYtMDgnLFxuXG4gIC8qKlxuICAgKiBGb3J3YXJkIHNlY3JlY3kgY2lwaGVycyBvbmx5XG4gICAqL1xuICBGb3J3YXJkU2VjcmVjeSA9ICdFTEJTZWN1cml0eVBvbGljeS1GUy0yMDE4LTA2JyxcblxuICAvKipcbiAgICogVExTMS4yIG9ubHkgYW5kIG5vIFNIQSBjaXBoZXJzXG4gICAqL1xuICBUTFMxMiA9ICdFTEJTZWN1cml0eVBvbGljeS1UTFMtMS0yLTIwMTctMDEnLFxuXG4gIC8qKlxuICAgKiBUTFMxLjIgb25seSB3aXRoIGFsbCBjaXBoZXJzXG4gICAqL1xuICBUTFMxMkV4dCA9ICdFTEJTZWN1cml0eVBvbGljeS1UTFMtMS0yLUV4dC0yMDE4LTA2JyxcblxuICAvKipcbiAgICogVExTMS4xIGFuZCBoaWdoZXIgd2l0aCBhbGwgY2lwaGVyc1xuICAgKi9cbiAgVExTMTEgPSAnRUxCU2VjdXJpdHlQb2xpY3ktVExTLTEtMS0yMDE3LTAxJyxcblxuICAvKipcbiAgICogU3VwcG9ydCBmb3IgREVTLUNCQzMtU0hBXG4gICAqXG4gICAqIERvIG5vdCB1c2UgdGhpcyBzZWN1cml0eSBwb2xpY3kgdW5sZXNzIHlvdSBtdXN0IHN1cHBvcnQgYSBsZWdhY3kgY2xpZW50XG4gICAqIHRoYXQgcmVxdWlyZXMgdGhlIERFUy1DQkMzLVNIQSBjaXBoZXIsIHdoaWNoIGlzIGEgd2VhayBjaXBoZXIuXG4gICAqL1xuICBMZWdhY3kgPSAnRUxCU2VjdXJpdHlQb2xpY3ktVExTLTEtMC0yMDE1LTA0Jyxcbn1cblxuLyoqXG4gKiBIb3cgdG8gaW50ZXJwcmV0IHRoZSBsb2FkIGJhbGFuY2luZyB0YXJnZXQgaWRlbnRpZmllcnNcbiAqL1xuZXhwb3J0IGVudW0gVGFyZ2V0VHlwZSB7XG4gIC8qKlxuICAgKiBUYXJnZXRzIGlkZW50aWZpZWQgYnkgaW5zdGFuY2UgSURcbiAgICovXG4gIEluc3RhbmNlID0gJ2luc3RhbmNlJyxcblxuICAvKipcbiAgICogVGFyZ2V0cyBpZGVudGlmaWVkIGJ5IElQIGFkZHJlc3NcbiAgICovXG4gIElwID0gJ2lwJyxcbn1cbiJdfQ==