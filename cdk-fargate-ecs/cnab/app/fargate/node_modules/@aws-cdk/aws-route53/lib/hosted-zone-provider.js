"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cdk = require("@aws-cdk/cdk");
const cxapi = require("@aws-cdk/cx-api");
const hosted_zone_ref_1 = require("./hosted-zone-ref");
const DEFAULT_HOSTED_ZONE = {
    Id: '/hostedzone/DUMMY',
    Name: 'example.com',
};
/**
 * Context provider that will lookup the Hosted Zone ID for the given arguments
 */
class HostedZoneProvider {
    constructor(context, props) {
        this.provider = new cdk.ContextProvider(context, cxapi.HOSTED_ZONE_PROVIDER, props);
    }
    /**
     * This method calls `findHostedZone` and returns the imported `HostedZoneRef`
     */
    findAndImport(parent, id) {
        return hosted_zone_ref_1.HostedZoneRef.import(parent, id, this.findHostedZone());
    }
    /**
     * Return the hosted zone meeting the filter
     */
    findHostedZone() {
        const zone = this.provider.getValue(DEFAULT_HOSTED_ZONE);
        // CDK handles the '.' at the end, so remove it here
        if (zone.Name.endsWith('.')) {
            zone.Name = zone.Name.substring(0, zone.Name.length - 1);
        }
        return {
            hostedZoneId: zone.Id,
            zoneName: zone.Name,
        };
    }
}
exports.HostedZoneProvider = HostedZoneProvider;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9zdGVkLXpvbmUtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJob3N0ZWQtem9uZS1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG9DQUFxQztBQUNyQyx5Q0FBMEM7QUFDMUMsdURBQXNFO0FBc0J0RSxNQUFNLG1CQUFtQixHQUE4QjtJQUNyRCxFQUFFLEVBQUUsbUJBQW1CO0lBQ3ZCLElBQUksRUFBRSxhQUFhO0NBQ3BCLENBQUM7QUFFRjs7R0FFRztBQUNILE1BQWEsa0JBQWtCO0lBRTdCLFlBQVksT0FBc0IsRUFBRSxLQUE4QjtRQUNoRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksR0FBRyxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLG9CQUFvQixFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3RGLENBQUM7SUFFRDs7T0FFRztJQUNJLGFBQWEsQ0FBQyxNQUFxQixFQUFFLEVBQVU7UUFDcEQsT0FBTywrQkFBYSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFDRDs7T0FFRztJQUNJLGNBQWM7UUFDbkIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsbUJBQW1CLENBQThCLENBQUM7UUFDdEYsb0RBQW9EO1FBQ3BELElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDM0IsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDMUQ7UUFDRCxPQUFPO1lBQ0wsWUFBWSxFQUFFLElBQUksQ0FBQyxFQUFFO1lBQ3JCLFFBQVEsRUFBRSxJQUFJLENBQUMsSUFBSTtTQUNwQixDQUFDO0lBQ0osQ0FBQztDQUNGO0FBMUJELGdEQTBCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjZGsgPSByZXF1aXJlKCdAYXdzLWNkay9jZGsnKTtcbmltcG9ydCBjeGFwaSA9IHJlcXVpcmUoJ0Bhd3MtY2RrL2N4LWFwaScpO1xuaW1wb3J0IHsgSG9zdGVkWm9uZVJlZiwgSG9zdGVkWm9uZVJlZlByb3BzIH0gZnJvbSAnLi9ob3N0ZWQtem9uZS1yZWYnO1xuXG4vKipcbiAqIFpvbmUgcHJvcGVydGllcyBmb3IgbG9va2luZyB1cCB0aGUgSG9zdGVkIFpvbmVcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBIb3N0ZWRab25lUHJvdmlkZXJQcm9wcyB7XG4gIC8qKlxuICAgKiBUaGUgem9uZSBkb21haW4gZS5nLiBleGFtcGxlLmNvbVxuICAgKi9cbiAgZG9tYWluTmFtZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBJcyB0aGlzIGEgcHJpdmF0ZSB6b25lXG4gICAqL1xuICBwcml2YXRlWm9uZT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIElmIHRoaXMgaXMgYSBwcml2YXRlIHpvbmUgd2hpY2ggVlBDIGlzIGFzc29jYWl0YXRlZFxuICAgKi9cbiAgdnBjSWQ/OiBzdHJpbmc7XG59XG5cbmNvbnN0IERFRkFVTFRfSE9TVEVEX1pPTkU6IEhvc3RlZFpvbmVDb250ZXh0UmVzcG9uc2UgPSB7XG4gIElkOiAnL2hvc3RlZHpvbmUvRFVNTVknLFxuICBOYW1lOiAnZXhhbXBsZS5jb20nLFxufTtcblxuLyoqXG4gKiBDb250ZXh0IHByb3ZpZGVyIHRoYXQgd2lsbCBsb29rdXAgdGhlIEhvc3RlZCBab25lIElEIGZvciB0aGUgZ2l2ZW4gYXJndW1lbnRzXG4gKi9cbmV4cG9ydCBjbGFzcyBIb3N0ZWRab25lUHJvdmlkZXIge1xuICBwcml2YXRlIHByb3ZpZGVyOiBjZGsuQ29udGV4dFByb3ZpZGVyO1xuICBjb25zdHJ1Y3Rvcihjb250ZXh0OiBjZGsuQ29uc3RydWN0LCBwcm9wczogSG9zdGVkWm9uZVByb3ZpZGVyUHJvcHMpIHtcbiAgICB0aGlzLnByb3ZpZGVyID0gbmV3IGNkay5Db250ZXh0UHJvdmlkZXIoY29udGV4dCwgY3hhcGkuSE9TVEVEX1pPTkVfUFJPVklERVIsIHByb3BzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGlzIG1ldGhvZCBjYWxscyBgZmluZEhvc3RlZFpvbmVgIGFuZCByZXR1cm5zIHRoZSBpbXBvcnRlZCBgSG9zdGVkWm9uZVJlZmBcbiAgICovXG4gIHB1YmxpYyBmaW5kQW5kSW1wb3J0KHBhcmVudDogY2RrLkNvbnN0cnVjdCwgaWQ6IHN0cmluZyk6IEhvc3RlZFpvbmVSZWYge1xuICAgIHJldHVybiBIb3N0ZWRab25lUmVmLmltcG9ydChwYXJlbnQsIGlkLCB0aGlzLmZpbmRIb3N0ZWRab25lKCkpO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm4gdGhlIGhvc3RlZCB6b25lIG1lZXRpbmcgdGhlIGZpbHRlclxuICAgKi9cbiAgcHVibGljIGZpbmRIb3N0ZWRab25lKCk6IEhvc3RlZFpvbmVSZWZQcm9wcyB7XG4gICAgY29uc3Qgem9uZSA9IHRoaXMucHJvdmlkZXIuZ2V0VmFsdWUoREVGQVVMVF9IT1NURURfWk9ORSkgYXMgSG9zdGVkWm9uZUNvbnRleHRSZXNwb25zZTtcbiAgICAvLyBDREsgaGFuZGxlcyB0aGUgJy4nIGF0IHRoZSBlbmQsIHNvIHJlbW92ZSBpdCBoZXJlXG4gICAgaWYgKHpvbmUuTmFtZS5lbmRzV2l0aCgnLicpKSB7XG4gICAgICB6b25lLk5hbWUgPSB6b25lLk5hbWUuc3Vic3RyaW5nKDAsIHpvbmUuTmFtZS5sZW5ndGggLSAxKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIGhvc3RlZFpvbmVJZDogem9uZS5JZCxcbiAgICAgIHpvbmVOYW1lOiB6b25lLk5hbWUsXG4gICAgfTtcbiAgfVxufVxuXG4vKipcbiAqIEEgbWlycm9yIG9mIHRoZSBkZWZpbml0aW9uIGluIGN4YXBpLCBidXQgY2FuIHVzZSB0aGUgY2FwaXRhbCBsZXR0ZXJzXG4gKiBzaW5jZSBpdCBkb2Vzbid0IG5lZWQgdG8gYmUgcHVibGlzaGVkIHZpYSBKU0lJLlxuICovXG5pbnRlcmZhY2UgSG9zdGVkWm9uZUNvbnRleHRSZXNwb25zZSB7XG4gIElkOiBzdHJpbmc7XG4gIE5hbWU6IHN0cmluZztcbn0iXX0=